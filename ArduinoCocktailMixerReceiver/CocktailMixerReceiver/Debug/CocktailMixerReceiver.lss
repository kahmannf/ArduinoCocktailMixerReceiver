
CocktailMixerReceiver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000016  00800100  00000730  000007c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000730  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000a8  00800116  00800116  000007da  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000007da  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000080c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000258  00000000  00000000  0000084c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00007132  00000000  00000000  00000aa4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000164e  00000000  00000000  00007bd6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000014b8  00000000  00000000  00009224  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000006f8  00000000  00000000  0000a6dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001e5f  00000000  00000000  0000add4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002682  00000000  00000000  0000cc33  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000240  00000000  00000000  0000f2b5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 35 00 	jmp	0x6a	; 0x6a <__ctors_end>
   4:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   8:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  10:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  14:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  18:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  1c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  20:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  24:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  28:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  2c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  30:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  34:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  38:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  3c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  40:	0c 94 e9 02 	jmp	0x5d2	; 0x5d2 <__vector_16>
  44:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  48:	0c 94 20 02 	jmp	0x440	; 0x440 <__vector_18>
  4c:	0c 94 52 02 	jmp	0x4a4	; 0x4a4 <__vector_19>
  50:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  54:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  58:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  5c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  60:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  64:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>

00000068 <__ctors_start>:
  68:	82 02       	muls	r24, r18

0000006a <__ctors_end>:
  6a:	11 24       	eor	r1, r1
  6c:	1f be       	out	0x3f, r1	; 63
  6e:	cf ef       	ldi	r28, 0xFF	; 255
  70:	d8 e0       	ldi	r29, 0x08	; 8
  72:	de bf       	out	0x3e, r29	; 62
  74:	cd bf       	out	0x3d, r28	; 61

00000076 <__do_copy_data>:
  76:	11 e0       	ldi	r17, 0x01	; 1
  78:	a0 e0       	ldi	r26, 0x00	; 0
  7a:	b1 e0       	ldi	r27, 0x01	; 1
  7c:	e0 e3       	ldi	r30, 0x30	; 48
  7e:	f7 e0       	ldi	r31, 0x07	; 7
  80:	02 c0       	rjmp	.+4      	; 0x86 <__do_copy_data+0x10>
  82:	05 90       	lpm	r0, Z+
  84:	0d 92       	st	X+, r0
  86:	a6 31       	cpi	r26, 0x16	; 22
  88:	b1 07       	cpc	r27, r17
  8a:	d9 f7       	brne	.-10     	; 0x82 <__do_copy_data+0xc>

0000008c <__do_clear_bss>:
  8c:	21 e0       	ldi	r18, 0x01	; 1
  8e:	a6 e1       	ldi	r26, 0x16	; 22
  90:	b1 e0       	ldi	r27, 0x01	; 1
  92:	01 c0       	rjmp	.+2      	; 0x96 <.do_clear_bss_start>

00000094 <.do_clear_bss_loop>:
  94:	1d 92       	st	X+, r1

00000096 <.do_clear_bss_start>:
  96:	ae 3b       	cpi	r26, 0xBE	; 190
  98:	b2 07       	cpc	r27, r18
  9a:	e1 f7       	brne	.-8      	; 0x94 <.do_clear_bss_loop>

0000009c <__do_global_ctors>:
  9c:	10 e0       	ldi	r17, 0x00	; 0
  9e:	c5 e3       	ldi	r28, 0x35	; 53
  a0:	d0 e0       	ldi	r29, 0x00	; 0
  a2:	04 c0       	rjmp	.+8      	; 0xac <__do_global_ctors+0x10>
  a4:	21 97       	sbiw	r28, 0x01	; 1
  a6:	fe 01       	movw	r30, r28
  a8:	0e 94 90 03 	call	0x720	; 0x720 <__tablejump2__>
  ac:	c4 33       	cpi	r28, 0x34	; 52
  ae:	d1 07       	cpc	r29, r17
  b0:	c9 f7       	brne	.-14     	; 0xa4 <__do_global_ctors+0x8>
  b2:	0e 94 b0 02 	call	0x560	; 0x560 <main>
  b6:	0c 94 96 03 	jmp	0x72c	; 0x72c <_exit>

000000ba <__bad_interrupt>:
  ba:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000be <setup>:

void toggle_pin(int, int);

void setup() 
{
	DDRD = 0xFF;
  be:	8f ef       	ldi	r24, 0xFF	; 255
  c0:	8a b9       	out	0x0a, r24	; 10
	DDRB = 0xFF;
  c2:	84 b9       	out	0x04, r24	; 4
	
	PORTD = 0b11111100;
  c4:	8c ef       	ldi	r24, 0xFC	; 252
  c6:	8b b9       	out	0x0b, r24	; 11

	PORTB = 0b00111111;
  c8:	8f e3       	ldi	r24, 0x3F	; 63
  ca:	85 b9       	out	0x05, r24	; 5
  public:
    inline HardwareSerial(
      volatile uint8_t *ubrrh, volatile uint8_t *ubrrl,
      volatile uint8_t *ucsra, volatile uint8_t *ucsrb,
      volatile uint8_t *ucsrc, volatile uint8_t *udr);
    void begin(unsigned long baud) { begin(baud, SERIAL_8N1); }
  cc:	26 e0       	ldi	r18, 0x06	; 6
  ce:	40 e8       	ldi	r20, 0x80	; 128
  d0:	55 e2       	ldi	r21, 0x25	; 37
  d2:	60 e0       	ldi	r22, 0x00	; 0
  d4:	70 e0       	ldi	r23, 0x00	; 0
  d6:	88 e1       	ldi	r24, 0x18	; 24
  d8:	91 e0       	ldi	r25, 0x01	; 1
  da:	0e 94 bb 01 	call	0x376	; 0x376 <_ZN14HardwareSerial5beginEmh>
	
	Serial.begin(9600);

	current_beverage = -1;
  de:	8f ef       	ldi	r24, 0xFF	; 255
  e0:	9f ef       	ldi	r25, 0xFF	; 255
  e2:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <__data_end+0x1>
  e6:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <__data_end>
  ea:	08 95       	ret

000000ec <_Z10toggle_pinii>:
		B2: 8
		B3: 9
		B4: 10
	 */

	 if(slot < 6) //B-Register
  ec:	86 30       	cpi	r24, 0x06	; 6
  ee:	91 05       	cpc	r25, r1
  f0:	cc f4       	brge	.+50     	; 0x124 <_Z10toggle_pinii+0x38>
	 {
		if(state == 0)
		{
			PORTB |= (1<<(slot));
  f2:	45 b1       	in	r20, 0x05	; 5
  f4:	21 e0       	ldi	r18, 0x01	; 1
  f6:	30 e0       	ldi	r19, 0x00	; 0
		B4: 10
	 */

	 if(slot < 6) //B-Register
	 {
		if(state == 0)
  f8:	67 2b       	or	r22, r23
  fa:	49 f4       	brne	.+18     	; 0x10e <_Z10toggle_pinii+0x22>
		{
			PORTB |= (1<<(slot));
  fc:	b9 01       	movw	r22, r18
  fe:	02 c0       	rjmp	.+4      	; 0x104 <_Z10toggle_pinii+0x18>
 100:	66 0f       	add	r22, r22
 102:	77 1f       	adc	r23, r23
 104:	8a 95       	dec	r24
 106:	e2 f7       	brpl	.-8      	; 0x100 <_Z10toggle_pinii+0x14>
 108:	cb 01       	movw	r24, r22
 10a:	84 2b       	or	r24, r20
 10c:	09 c0       	rjmp	.+18     	; 0x120 <_Z10toggle_pinii+0x34>
		}
		else
		{
			PORTB &= ~(1<<(slot));
 10e:	b9 01       	movw	r22, r18
 110:	02 c0       	rjmp	.+4      	; 0x116 <_Z10toggle_pinii+0x2a>
 112:	66 0f       	add	r22, r22
 114:	77 1f       	adc	r23, r23
 116:	8a 95       	dec	r24
 118:	e2 f7       	brpl	.-8      	; 0x112 <_Z10toggle_pinii+0x26>
 11a:	cb 01       	movw	r24, r22
 11c:	80 95       	com	r24
 11e:	84 23       	and	r24, r20
 120:	85 b9       	out	0x05, r24	; 5
 122:	08 95       	ret
		}
	 }
	 else if(slot > 9)
 124:	8a 30       	cpi	r24, 0x0A	; 10
 126:	91 05       	cpc	r25, r1
 128:	cc f0       	brlt	.+50     	; 0x15c <_Z10toggle_pinii+0x70>
 12a:	08 97       	sbiw	r24, 0x08	; 8
	 {
		if(state == 0)
		{
			PORTD |= (1<<(slot - 8));
 12c:	4b b1       	in	r20, 0x0b	; 11
 12e:	21 e0       	ldi	r18, 0x01	; 1
 130:	30 e0       	ldi	r19, 0x00	; 0
			PORTB &= ~(1<<(slot));
		}
	 }
	 else if(slot > 9)
	 {
		if(state == 0)
 132:	67 2b       	or	r22, r23
 134:	49 f4       	brne	.+18     	; 0x148 <_Z10toggle_pinii+0x5c>
		{
			PORTD |= (1<<(slot - 8));
 136:	b9 01       	movw	r22, r18
 138:	02 c0       	rjmp	.+4      	; 0x13e <_Z10toggle_pinii+0x52>
 13a:	66 0f       	add	r22, r22
 13c:	77 1f       	adc	r23, r23
 13e:	8a 95       	dec	r24
 140:	e2 f7       	brpl	.-8      	; 0x13a <_Z10toggle_pinii+0x4e>
 142:	cb 01       	movw	r24, r22
 144:	84 2b       	or	r24, r20
 146:	09 c0       	rjmp	.+18     	; 0x15a <_Z10toggle_pinii+0x6e>
		}
		else
		{
			PORTD &= ~(1<<(slot - 8));
 148:	b9 01       	movw	r22, r18
 14a:	02 c0       	rjmp	.+4      	; 0x150 <_Z10toggle_pinii+0x64>
 14c:	66 0f       	add	r22, r22
 14e:	77 1f       	adc	r23, r23
 150:	8a 95       	dec	r24
 152:	e2 f7       	brpl	.-8      	; 0x14c <_Z10toggle_pinii+0x60>
 154:	cb 01       	movw	r24, r22
 156:	80 95       	com	r24
 158:	84 23       	and	r24, r20
 15a:	8b b9       	out	0x0b, r24	; 11
 15c:	08 95       	ret

0000015e <loop>:
{
	// put your main code here, to run repeatedly:
	//
	//if(transmission_counter == -1)
		//return;
	if(Serial.available() > 0)
 15e:	88 e1       	ldi	r24, 0x18	; 24
 160:	91 e0       	ldi	r25, 0x01	; 1
 162:	0e 94 e6 00 	call	0x1cc	; 0x1cc <_ZN14HardwareSerial9availableEv>
 166:	18 16       	cp	r1, r24
 168:	19 06       	cpc	r1, r25
 16a:	7c f5       	brge	.+94     	; 0x1ca <loop+0x6c>
	{
		//toggle_pin(3, 1);
		if(slot == -1)
 16c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <slot>
 170:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <slot+0x1>
 174:	01 96       	adiw	r24, 0x01	; 1
 176:	49 f4       	brne	.+18     	; 0x18a <loop+0x2c>
		{
			slot = Serial.read();
 178:	88 e1       	ldi	r24, 0x18	; 24
 17a:	91 e0       	ldi	r25, 0x01	; 1
 17c:	0e 94 00 01 	call	0x200	; 0x200 <_ZN14HardwareSerial4readEv>
 180:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <slot+0x1>
 184:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <slot>
 188:	08 c0       	rjmp	.+16     	; 0x19a <loop+0x3c>
		}
		else
		{
			state = Serial.read();
 18a:	88 e1       	ldi	r24, 0x18	; 24
 18c:	91 e0       	ldi	r25, 0x01	; 1
 18e:	0e 94 00 01 	call	0x200	; 0x200 <_ZN14HardwareSerial4readEv>
 192:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 196:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
		}

		if(state != -1)
 19a:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__data_start>
 19e:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__data_start+0x1>
 1a2:	6f 3f       	cpi	r22, 0xFF	; 255
 1a4:	8f ef       	ldi	r24, 0xFF	; 255
 1a6:	78 07       	cpc	r23, r24
 1a8:	81 f0       	breq	.+32     	; 0x1ca <loop+0x6c>
		{
			toggle_pin(slot, state);
 1aa:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <slot>
 1ae:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <slot+0x1>
 1b2:	0e 94 76 00 	call	0xec	; 0xec <_Z10toggle_pinii>

			slot = -1;
 1b6:	8f ef       	ldi	r24, 0xFF	; 255
 1b8:	9f ef       	ldi	r25, 0xFF	; 255
 1ba:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <slot+0x1>
 1be:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <slot>
			state = -1;
 1c2:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 1c6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 1ca:	08 95       	ret

000001cc <_ZN14HardwareSerial9availableEv>:
 1cc:	fc 01       	movw	r30, r24
 1ce:	91 8d       	ldd	r25, Z+25	; 0x19
 1d0:	22 8d       	ldd	r18, Z+26	; 0x1a
 1d2:	89 2f       	mov	r24, r25
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	80 5c       	subi	r24, 0xC0	; 192
 1d8:	9f 4f       	sbci	r25, 0xFF	; 255
 1da:	82 1b       	sub	r24, r18
 1dc:	91 09       	sbc	r25, r1
 1de:	8f 73       	andi	r24, 0x3F	; 63
 1e0:	99 27       	eor	r25, r25
 1e2:	08 95       	ret

000001e4 <_ZN14HardwareSerial4peekEv>:
 1e4:	fc 01       	movw	r30, r24
 1e6:	91 8d       	ldd	r25, Z+25	; 0x19
 1e8:	82 8d       	ldd	r24, Z+26	; 0x1a
 1ea:	98 17       	cp	r25, r24
 1ec:	31 f0       	breq	.+12     	; 0x1fa <_ZN14HardwareSerial4peekEv+0x16>
 1ee:	82 8d       	ldd	r24, Z+26	; 0x1a
 1f0:	e8 0f       	add	r30, r24
 1f2:	f1 1d       	adc	r31, r1
 1f4:	85 8d       	ldd	r24, Z+29	; 0x1d
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	08 95       	ret
 1fa:	8f ef       	ldi	r24, 0xFF	; 255
 1fc:	9f ef       	ldi	r25, 0xFF	; 255
 1fe:	08 95       	ret

00000200 <_ZN14HardwareSerial4readEv>:
 200:	fc 01       	movw	r30, r24
 202:	91 8d       	ldd	r25, Z+25	; 0x19
 204:	82 8d       	ldd	r24, Z+26	; 0x1a
 206:	98 17       	cp	r25, r24
 208:	61 f0       	breq	.+24     	; 0x222 <_ZN14HardwareSerial4readEv+0x22>
 20a:	82 8d       	ldd	r24, Z+26	; 0x1a
 20c:	df 01       	movw	r26, r30
 20e:	a8 0f       	add	r26, r24
 210:	b1 1d       	adc	r27, r1
 212:	5d 96       	adiw	r26, 0x1d	; 29
 214:	8c 91       	ld	r24, X
 216:	92 8d       	ldd	r25, Z+26	; 0x1a
 218:	9f 5f       	subi	r25, 0xFF	; 255
 21a:	9f 73       	andi	r25, 0x3F	; 63
 21c:	92 8f       	std	Z+26, r25	; 0x1a
 21e:	90 e0       	ldi	r25, 0x00	; 0
 220:	08 95       	ret
 222:	8f ef       	ldi	r24, 0xFF	; 255
 224:	9f ef       	ldi	r25, 0xFF	; 255
 226:	08 95       	ret

00000228 <_ZN14HardwareSerial17availableForWriteEv>:
 228:	fc 01       	movw	r30, r24
 22a:	53 8d       	ldd	r21, Z+27	; 0x1b
 22c:	44 8d       	ldd	r20, Z+28	; 0x1c
 22e:	25 2f       	mov	r18, r21
 230:	30 e0       	ldi	r19, 0x00	; 0
 232:	84 2f       	mov	r24, r20
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	82 1b       	sub	r24, r18
 238:	93 0b       	sbc	r25, r19
 23a:	54 17       	cp	r21, r20
 23c:	10 f0       	brcs	.+4      	; 0x242 <_ZN14HardwareSerial17availableForWriteEv+0x1a>
 23e:	cf 96       	adiw	r24, 0x3f	; 63
 240:	08 95       	ret
 242:	01 97       	sbiw	r24, 0x01	; 1
 244:	08 95       	ret

00000246 <_Z14serialEventRunv>:
 246:	88 e7       	ldi	r24, 0x78	; 120
 248:	92 e0       	ldi	r25, 0x02	; 2
 24a:	89 2b       	or	r24, r25
 24c:	49 f0       	breq	.+18     	; 0x260 <_Z14serialEventRunv+0x1a>
 24e:	80 e0       	ldi	r24, 0x00	; 0
 250:	90 e0       	ldi	r25, 0x00	; 0
 252:	89 2b       	or	r24, r25
 254:	29 f0       	breq	.+10     	; 0x260 <_Z14serialEventRunv+0x1a>
 256:	0e 94 78 02 	call	0x4f0	; 0x4f0 <_Z17Serial0_availablev>
 25a:	81 11       	cpse	r24, r1
 25c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
 260:	08 95       	ret

00000262 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>:
 262:	fc 01       	movw	r30, r24
 264:	84 8d       	ldd	r24, Z+28	; 0x1c
 266:	df 01       	movw	r26, r30
 268:	a8 0f       	add	r26, r24
 26a:	b1 1d       	adc	r27, r1
 26c:	a3 5a       	subi	r26, 0xA3	; 163
 26e:	bf 4f       	sbci	r27, 0xFF	; 255
 270:	2c 91       	ld	r18, X
 272:	84 8d       	ldd	r24, Z+28	; 0x1c
 274:	90 e0       	ldi	r25, 0x00	; 0
 276:	01 96       	adiw	r24, 0x01	; 1
 278:	8f 73       	andi	r24, 0x3F	; 63
 27a:	99 27       	eor	r25, r25
 27c:	84 8f       	std	Z+28, r24	; 0x1c
 27e:	a6 89       	ldd	r26, Z+22	; 0x16
 280:	b7 89       	ldd	r27, Z+23	; 0x17
 282:	2c 93       	st	X, r18
 284:	a0 89       	ldd	r26, Z+16	; 0x10
 286:	b1 89       	ldd	r27, Z+17	; 0x11
 288:	8c 91       	ld	r24, X
 28a:	80 64       	ori	r24, 0x40	; 64
 28c:	8c 93       	st	X, r24
 28e:	93 8d       	ldd	r25, Z+27	; 0x1b
 290:	84 8d       	ldd	r24, Z+28	; 0x1c
 292:	98 13       	cpse	r25, r24
 294:	06 c0       	rjmp	.+12     	; 0x2a2 <_ZN14HardwareSerial17_tx_udr_empty_irqEv+0x40>
 296:	02 88       	ldd	r0, Z+18	; 0x12
 298:	f3 89       	ldd	r31, Z+19	; 0x13
 29a:	e0 2d       	mov	r30, r0
 29c:	80 81       	ld	r24, Z
 29e:	8f 7d       	andi	r24, 0xDF	; 223
 2a0:	80 83       	st	Z, r24
 2a2:	08 95       	ret

000002a4 <_ZN14HardwareSerial5writeEh>:
 2a4:	ef 92       	push	r14
 2a6:	ff 92       	push	r15
 2a8:	0f 93       	push	r16
 2aa:	1f 93       	push	r17
 2ac:	cf 93       	push	r28
 2ae:	df 93       	push	r29
 2b0:	ec 01       	movw	r28, r24
 2b2:	81 e0       	ldi	r24, 0x01	; 1
 2b4:	88 8f       	std	Y+24, r24	; 0x18
 2b6:	9b 8d       	ldd	r25, Y+27	; 0x1b
 2b8:	8c 8d       	ldd	r24, Y+28	; 0x1c
 2ba:	98 13       	cpse	r25, r24
 2bc:	05 c0       	rjmp	.+10     	; 0x2c8 <_ZN14HardwareSerial5writeEh+0x24>
 2be:	e8 89       	ldd	r30, Y+16	; 0x10
 2c0:	f9 89       	ldd	r31, Y+17	; 0x11
 2c2:	80 81       	ld	r24, Z
 2c4:	85 fd       	sbrc	r24, 5
 2c6:	24 c0       	rjmp	.+72     	; 0x310 <_ZN14HardwareSerial5writeEh+0x6c>
 2c8:	f6 2e       	mov	r15, r22
 2ca:	0b 8d       	ldd	r16, Y+27	; 0x1b
 2cc:	10 e0       	ldi	r17, 0x00	; 0
 2ce:	0f 5f       	subi	r16, 0xFF	; 255
 2d0:	1f 4f       	sbci	r17, 0xFF	; 255
 2d2:	0f 73       	andi	r16, 0x3F	; 63
 2d4:	11 27       	eor	r17, r17
 2d6:	e0 2e       	mov	r14, r16
 2d8:	8c 8d       	ldd	r24, Y+28	; 0x1c
 2da:	e8 12       	cpse	r14, r24
 2dc:	0c c0       	rjmp	.+24     	; 0x2f6 <_ZN14HardwareSerial5writeEh+0x52>
 2de:	0f b6       	in	r0, 0x3f	; 63
 2e0:	07 fc       	sbrc	r0, 7
 2e2:	fa cf       	rjmp	.-12     	; 0x2d8 <_ZN14HardwareSerial5writeEh+0x34>
 2e4:	e8 89       	ldd	r30, Y+16	; 0x10
 2e6:	f9 89       	ldd	r31, Y+17	; 0x11
 2e8:	80 81       	ld	r24, Z
 2ea:	85 ff       	sbrs	r24, 5
 2ec:	f5 cf       	rjmp	.-22     	; 0x2d8 <_ZN14HardwareSerial5writeEh+0x34>
 2ee:	ce 01       	movw	r24, r28
 2f0:	0e 94 31 01 	call	0x262	; 0x262 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
 2f4:	f1 cf       	rjmp	.-30     	; 0x2d8 <_ZN14HardwareSerial5writeEh+0x34>
 2f6:	8b 8d       	ldd	r24, Y+27	; 0x1b
 2f8:	fe 01       	movw	r30, r28
 2fa:	e8 0f       	add	r30, r24
 2fc:	f1 1d       	adc	r31, r1
 2fe:	e3 5a       	subi	r30, 0xA3	; 163
 300:	ff 4f       	sbci	r31, 0xFF	; 255
 302:	f0 82       	st	Z, r15
 304:	0b 8f       	std	Y+27, r16	; 0x1b
 306:	ea 89       	ldd	r30, Y+18	; 0x12
 308:	fb 89       	ldd	r31, Y+19	; 0x13
 30a:	80 81       	ld	r24, Z
 30c:	80 62       	ori	r24, 0x20	; 32
 30e:	07 c0       	rjmp	.+14     	; 0x31e <_ZN14HardwareSerial5writeEh+0x7a>
 310:	ee 89       	ldd	r30, Y+22	; 0x16
 312:	ff 89       	ldd	r31, Y+23	; 0x17
 314:	60 83       	st	Z, r22
 316:	e8 89       	ldd	r30, Y+16	; 0x10
 318:	f9 89       	ldd	r31, Y+17	; 0x11
 31a:	80 81       	ld	r24, Z
 31c:	80 64       	ori	r24, 0x40	; 64
 31e:	80 83       	st	Z, r24
 320:	81 e0       	ldi	r24, 0x01	; 1
 322:	90 e0       	ldi	r25, 0x00	; 0
 324:	df 91       	pop	r29
 326:	cf 91       	pop	r28
 328:	1f 91       	pop	r17
 32a:	0f 91       	pop	r16
 32c:	ff 90       	pop	r15
 32e:	ef 90       	pop	r14
 330:	08 95       	ret

00000332 <_ZN14HardwareSerial5flushEv>:
 332:	cf 93       	push	r28
 334:	df 93       	push	r29
 336:	ec 01       	movw	r28, r24
 338:	88 8d       	ldd	r24, Y+24	; 0x18
 33a:	88 23       	and	r24, r24
 33c:	c9 f0       	breq	.+50     	; 0x370 <_ZN14HardwareSerial5flushEv+0x3e>
 33e:	ea 89       	ldd	r30, Y+18	; 0x12
 340:	fb 89       	ldd	r31, Y+19	; 0x13
 342:	80 81       	ld	r24, Z
 344:	85 fd       	sbrc	r24, 5
 346:	05 c0       	rjmp	.+10     	; 0x352 <_ZN14HardwareSerial5flushEv+0x20>
 348:	a8 89       	ldd	r26, Y+16	; 0x10
 34a:	b9 89       	ldd	r27, Y+17	; 0x11
 34c:	8c 91       	ld	r24, X
 34e:	86 fd       	sbrc	r24, 6
 350:	0f c0       	rjmp	.+30     	; 0x370 <_ZN14HardwareSerial5flushEv+0x3e>
 352:	0f b6       	in	r0, 0x3f	; 63
 354:	07 fc       	sbrc	r0, 7
 356:	f5 cf       	rjmp	.-22     	; 0x342 <_ZN14HardwareSerial5flushEv+0x10>
 358:	80 81       	ld	r24, Z
 35a:	85 ff       	sbrs	r24, 5
 35c:	f2 cf       	rjmp	.-28     	; 0x342 <_ZN14HardwareSerial5flushEv+0x10>
 35e:	a8 89       	ldd	r26, Y+16	; 0x10
 360:	b9 89       	ldd	r27, Y+17	; 0x11
 362:	8c 91       	ld	r24, X
 364:	85 ff       	sbrs	r24, 5
 366:	ed cf       	rjmp	.-38     	; 0x342 <_ZN14HardwareSerial5flushEv+0x10>
 368:	ce 01       	movw	r24, r28
 36a:	0e 94 31 01 	call	0x262	; 0x262 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
 36e:	e7 cf       	rjmp	.-50     	; 0x33e <_ZN14HardwareSerial5flushEv+0xc>
 370:	df 91       	pop	r29
 372:	cf 91       	pop	r28
 374:	08 95       	ret

00000376 <_ZN14HardwareSerial5beginEmh>:
 376:	cf 92       	push	r12
 378:	df 92       	push	r13
 37a:	ef 92       	push	r14
 37c:	ff 92       	push	r15
 37e:	1f 93       	push	r17
 380:	cf 93       	push	r28
 382:	df 93       	push	r29
 384:	ec 01       	movw	r28, r24
 386:	6a 01       	movw	r12, r20
 388:	7b 01       	movw	r14, r22
 38a:	12 2f       	mov	r17, r18
 38c:	e8 89       	ldd	r30, Y+16	; 0x10
 38e:	f9 89       	ldd	r31, Y+17	; 0x11
 390:	82 e0       	ldi	r24, 0x02	; 2
 392:	80 83       	st	Z, r24
 394:	41 15       	cp	r20, r1
 396:	51 4e       	sbci	r21, 0xE1	; 225
 398:	61 05       	cpc	r22, r1
 39a:	71 05       	cpc	r23, r1
 39c:	b1 f0       	breq	.+44     	; 0x3ca <_ZN14HardwareSerial5beginEmh+0x54>
 39e:	60 e0       	ldi	r22, 0x00	; 0
 3a0:	79 e0       	ldi	r23, 0x09	; 9
 3a2:	8d e3       	ldi	r24, 0x3D	; 61
 3a4:	90 e0       	ldi	r25, 0x00	; 0
 3a6:	a7 01       	movw	r20, r14
 3a8:	96 01       	movw	r18, r12
 3aa:	0e 94 6e 03 	call	0x6dc	; 0x6dc <__udivmodsi4>
 3ae:	da 01       	movw	r26, r20
 3b0:	c9 01       	movw	r24, r18
 3b2:	01 97       	sbiw	r24, 0x01	; 1
 3b4:	a1 09       	sbc	r26, r1
 3b6:	b1 09       	sbc	r27, r1
 3b8:	b6 95       	lsr	r27
 3ba:	a7 95       	ror	r26
 3bc:	97 95       	ror	r25
 3be:	87 95       	ror	r24
 3c0:	9c 01       	movw	r18, r24
 3c2:	21 15       	cp	r18, r1
 3c4:	80 e1       	ldi	r24, 0x10	; 16
 3c6:	38 07       	cpc	r19, r24
 3c8:	a8 f0       	brcs	.+42     	; 0x3f4 <_ZN14HardwareSerial5beginEmh+0x7e>
 3ca:	e8 89       	ldd	r30, Y+16	; 0x10
 3cc:	f9 89       	ldd	r31, Y+17	; 0x11
 3ce:	10 82       	st	Z, r1
 3d0:	60 e8       	ldi	r22, 0x80	; 128
 3d2:	74 e8       	ldi	r23, 0x84	; 132
 3d4:	8e e1       	ldi	r24, 0x1E	; 30
 3d6:	90 e0       	ldi	r25, 0x00	; 0
 3d8:	a7 01       	movw	r20, r14
 3da:	96 01       	movw	r18, r12
 3dc:	0e 94 6e 03 	call	0x6dc	; 0x6dc <__udivmodsi4>
 3e0:	da 01       	movw	r26, r20
 3e2:	c9 01       	movw	r24, r18
 3e4:	01 97       	sbiw	r24, 0x01	; 1
 3e6:	a1 09       	sbc	r26, r1
 3e8:	b1 09       	sbc	r27, r1
 3ea:	b6 95       	lsr	r27
 3ec:	a7 95       	ror	r26
 3ee:	97 95       	ror	r25
 3f0:	87 95       	ror	r24
 3f2:	9c 01       	movw	r18, r24
 3f4:	ec 85       	ldd	r30, Y+12	; 0x0c
 3f6:	fd 85       	ldd	r31, Y+13	; 0x0d
 3f8:	30 83       	st	Z, r19
 3fa:	ee 85       	ldd	r30, Y+14	; 0x0e
 3fc:	ff 85       	ldd	r31, Y+15	; 0x0f
 3fe:	20 83       	st	Z, r18
 400:	18 8e       	std	Y+24, r1	; 0x18
 402:	ec 89       	ldd	r30, Y+20	; 0x14
 404:	fd 89       	ldd	r31, Y+21	; 0x15
 406:	10 83       	st	Z, r17
 408:	ea 89       	ldd	r30, Y+18	; 0x12
 40a:	fb 89       	ldd	r31, Y+19	; 0x13
 40c:	80 81       	ld	r24, Z
 40e:	80 61       	ori	r24, 0x10	; 16
 410:	80 83       	st	Z, r24
 412:	ea 89       	ldd	r30, Y+18	; 0x12
 414:	fb 89       	ldd	r31, Y+19	; 0x13
 416:	80 81       	ld	r24, Z
 418:	88 60       	ori	r24, 0x08	; 8
 41a:	80 83       	st	Z, r24
 41c:	ea 89       	ldd	r30, Y+18	; 0x12
 41e:	fb 89       	ldd	r31, Y+19	; 0x13
 420:	80 81       	ld	r24, Z
 422:	80 68       	ori	r24, 0x80	; 128
 424:	80 83       	st	Z, r24
 426:	ea 89       	ldd	r30, Y+18	; 0x12
 428:	fb 89       	ldd	r31, Y+19	; 0x13
 42a:	80 81       	ld	r24, Z
 42c:	8f 7d       	andi	r24, 0xDF	; 223
 42e:	80 83       	st	Z, r24
 430:	df 91       	pop	r29
 432:	cf 91       	pop	r28
 434:	1f 91       	pop	r17
 436:	ff 90       	pop	r15
 438:	ef 90       	pop	r14
 43a:	df 90       	pop	r13
 43c:	cf 90       	pop	r12
 43e:	08 95       	ret

00000440 <__vector_18>:
 440:	1f 92       	push	r1
 442:	0f 92       	push	r0
 444:	0f b6       	in	r0, 0x3f	; 63
 446:	0f 92       	push	r0
 448:	11 24       	eor	r1, r1
 44a:	2f 93       	push	r18
 44c:	8f 93       	push	r24
 44e:	9f 93       	push	r25
 450:	ef 93       	push	r30
 452:	ff 93       	push	r31
 454:	e0 91 28 01 	lds	r30, 0x0128	; 0x800128 <Serial+0x10>
 458:	f0 91 29 01 	lds	r31, 0x0129	; 0x800129 <Serial+0x11>
 45c:	80 81       	ld	r24, Z
 45e:	e0 91 2e 01 	lds	r30, 0x012E	; 0x80012e <Serial+0x16>
 462:	f0 91 2f 01 	lds	r31, 0x012F	; 0x80012f <Serial+0x17>
 466:	82 fd       	sbrc	r24, 2
 468:	12 c0       	rjmp	.+36     	; 0x48e <__vector_18+0x4e>
 46a:	90 81       	ld	r25, Z
 46c:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <Serial+0x19>
 470:	8f 5f       	subi	r24, 0xFF	; 255
 472:	8f 73       	andi	r24, 0x3F	; 63
 474:	20 91 32 01 	lds	r18, 0x0132	; 0x800132 <Serial+0x1a>
 478:	82 17       	cp	r24, r18
 47a:	51 f0       	breq	.+20     	; 0x490 <__vector_18+0x50>
 47c:	e0 91 31 01 	lds	r30, 0x0131	; 0x800131 <Serial+0x19>
 480:	f0 e0       	ldi	r31, 0x00	; 0
 482:	e8 5e       	subi	r30, 0xE8	; 232
 484:	fe 4f       	sbci	r31, 0xFE	; 254
 486:	95 8f       	std	Z+29, r25	; 0x1d
 488:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <Serial+0x19>
 48c:	01 c0       	rjmp	.+2      	; 0x490 <__vector_18+0x50>
 48e:	80 81       	ld	r24, Z
 490:	ff 91       	pop	r31
 492:	ef 91       	pop	r30
 494:	9f 91       	pop	r25
 496:	8f 91       	pop	r24
 498:	2f 91       	pop	r18
 49a:	0f 90       	pop	r0
 49c:	0f be       	out	0x3f, r0	; 63
 49e:	0f 90       	pop	r0
 4a0:	1f 90       	pop	r1
 4a2:	18 95       	reti

000004a4 <__vector_19>:
 4a4:	1f 92       	push	r1
 4a6:	0f 92       	push	r0
 4a8:	0f b6       	in	r0, 0x3f	; 63
 4aa:	0f 92       	push	r0
 4ac:	11 24       	eor	r1, r1
 4ae:	2f 93       	push	r18
 4b0:	3f 93       	push	r19
 4b2:	4f 93       	push	r20
 4b4:	5f 93       	push	r21
 4b6:	6f 93       	push	r22
 4b8:	7f 93       	push	r23
 4ba:	8f 93       	push	r24
 4bc:	9f 93       	push	r25
 4be:	af 93       	push	r26
 4c0:	bf 93       	push	r27
 4c2:	ef 93       	push	r30
 4c4:	ff 93       	push	r31
 4c6:	88 e1       	ldi	r24, 0x18	; 24
 4c8:	91 e0       	ldi	r25, 0x01	; 1
 4ca:	0e 94 31 01 	call	0x262	; 0x262 <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
 4ce:	ff 91       	pop	r31
 4d0:	ef 91       	pop	r30
 4d2:	bf 91       	pop	r27
 4d4:	af 91       	pop	r26
 4d6:	9f 91       	pop	r25
 4d8:	8f 91       	pop	r24
 4da:	7f 91       	pop	r23
 4dc:	6f 91       	pop	r22
 4de:	5f 91       	pop	r21
 4e0:	4f 91       	pop	r20
 4e2:	3f 91       	pop	r19
 4e4:	2f 91       	pop	r18
 4e6:	0f 90       	pop	r0
 4e8:	0f be       	out	0x3f, r0	; 63
 4ea:	0f 90       	pop	r0
 4ec:	1f 90       	pop	r1
 4ee:	18 95       	reti

000004f0 <_Z17Serial0_availablev>:
 4f0:	88 e1       	ldi	r24, 0x18	; 24
 4f2:	91 e0       	ldi	r25, 0x01	; 1
 4f4:	0e 94 e6 00 	call	0x1cc	; 0x1cc <_ZN14HardwareSerial9availableEv>
 4f8:	21 e0       	ldi	r18, 0x01	; 1
 4fa:	89 2b       	or	r24, r25
 4fc:	09 f4       	brne	.+2      	; 0x500 <_Z17Serial0_availablev+0x10>
 4fe:	20 e0       	ldi	r18, 0x00	; 0
 500:	82 2f       	mov	r24, r18
 502:	08 95       	ret

00000504 <_GLOBAL__sub_I___vector_18>:
 504:	e8 e1       	ldi	r30, 0x18	; 24
 506:	f1 e0       	ldi	r31, 0x01	; 1
 508:	13 82       	std	Z+3, r1	; 0x03
 50a:	12 82       	std	Z+2, r1	; 0x02
 50c:	88 ee       	ldi	r24, 0xE8	; 232
 50e:	93 e0       	ldi	r25, 0x03	; 3
 510:	a0 e0       	ldi	r26, 0x00	; 0
 512:	b0 e0       	ldi	r27, 0x00	; 0
 514:	84 83       	std	Z+4, r24	; 0x04
 516:	95 83       	std	Z+5, r25	; 0x05
 518:	a6 83       	std	Z+6, r26	; 0x06
 51a:	b7 83       	std	Z+7, r27	; 0x07
 51c:	88 e0       	ldi	r24, 0x08	; 8
 51e:	91 e0       	ldi	r25, 0x01	; 1
 520:	91 83       	std	Z+1, r25	; 0x01
 522:	80 83       	st	Z, r24
 524:	85 ec       	ldi	r24, 0xC5	; 197
 526:	90 e0       	ldi	r25, 0x00	; 0
 528:	95 87       	std	Z+13, r25	; 0x0d
 52a:	84 87       	std	Z+12, r24	; 0x0c
 52c:	84 ec       	ldi	r24, 0xC4	; 196
 52e:	90 e0       	ldi	r25, 0x00	; 0
 530:	97 87       	std	Z+15, r25	; 0x0f
 532:	86 87       	std	Z+14, r24	; 0x0e
 534:	80 ec       	ldi	r24, 0xC0	; 192
 536:	90 e0       	ldi	r25, 0x00	; 0
 538:	91 8b       	std	Z+17, r25	; 0x11
 53a:	80 8b       	std	Z+16, r24	; 0x10
 53c:	81 ec       	ldi	r24, 0xC1	; 193
 53e:	90 e0       	ldi	r25, 0x00	; 0
 540:	93 8b       	std	Z+19, r25	; 0x13
 542:	82 8b       	std	Z+18, r24	; 0x12
 544:	82 ec       	ldi	r24, 0xC2	; 194
 546:	90 e0       	ldi	r25, 0x00	; 0
 548:	95 8b       	std	Z+21, r25	; 0x15
 54a:	84 8b       	std	Z+20, r24	; 0x14
 54c:	86 ec       	ldi	r24, 0xC6	; 198
 54e:	90 e0       	ldi	r25, 0x00	; 0
 550:	97 8b       	std	Z+23, r25	; 0x17
 552:	86 8b       	std	Z+22, r24	; 0x16
 554:	11 8e       	std	Z+25, r1	; 0x19
 556:	12 8e       	std	Z+26, r1	; 0x1a
 558:	13 8e       	std	Z+27, r1	; 0x1b
 55a:	14 8e       	std	Z+28, r1	; 0x1c
 55c:	08 95       	ret

0000055e <initVariant>:
 55e:	08 95       	ret

00000560 <main>:
 560:	0e 94 33 03 	call	0x666	; 0x666 <init>
 564:	0e 94 af 02 	call	0x55e	; 0x55e <initVariant>
 568:	0e 94 5f 00 	call	0xbe	; 0xbe <setup>
 56c:	c3 e2       	ldi	r28, 0x23	; 35
 56e:	d1 e0       	ldi	r29, 0x01	; 1
 570:	0e 94 af 00 	call	0x15e	; 0x15e <loop>
 574:	20 97       	sbiw	r28, 0x00	; 0
 576:	e1 f3       	breq	.-8      	; 0x570 <main+0x10>
 578:	0e 94 23 01 	call	0x246	; 0x246 <_Z14serialEventRunv>
 57c:	f9 cf       	rjmp	.-14     	; 0x570 <main+0x10>

0000057e <_ZN5Print5writeEPKhj>:
 57e:	cf 92       	push	r12
 580:	df 92       	push	r13
 582:	ef 92       	push	r14
 584:	ff 92       	push	r15
 586:	0f 93       	push	r16
 588:	1f 93       	push	r17
 58a:	cf 93       	push	r28
 58c:	df 93       	push	r29
 58e:	6c 01       	movw	r12, r24
 590:	7a 01       	movw	r14, r20
 592:	8b 01       	movw	r16, r22
 594:	c0 e0       	ldi	r28, 0x00	; 0
 596:	d0 e0       	ldi	r29, 0x00	; 0
 598:	ce 15       	cp	r28, r14
 59a:	df 05       	cpc	r29, r15
 59c:	81 f0       	breq	.+32     	; 0x5be <_ZN5Print5writeEPKhj+0x40>
 59e:	d8 01       	movw	r26, r16
 5a0:	6d 91       	ld	r22, X+
 5a2:	8d 01       	movw	r16, r26
 5a4:	d6 01       	movw	r26, r12
 5a6:	ed 91       	ld	r30, X+
 5a8:	fc 91       	ld	r31, X
 5aa:	01 90       	ld	r0, Z+
 5ac:	f0 81       	ld	r31, Z
 5ae:	e0 2d       	mov	r30, r0
 5b0:	c6 01       	movw	r24, r12
 5b2:	09 95       	icall
 5b4:	89 2b       	or	r24, r25
 5b6:	11 f0       	breq	.+4      	; 0x5bc <_ZN5Print5writeEPKhj+0x3e>
 5b8:	21 96       	adiw	r28, 0x01	; 1
 5ba:	ee cf       	rjmp	.-36     	; 0x598 <_ZN5Print5writeEPKhj+0x1a>
 5bc:	7e 01       	movw	r14, r28
 5be:	c7 01       	movw	r24, r14
 5c0:	df 91       	pop	r29
 5c2:	cf 91       	pop	r28
 5c4:	1f 91       	pop	r17
 5c6:	0f 91       	pop	r16
 5c8:	ff 90       	pop	r15
 5ca:	ef 90       	pop	r14
 5cc:	df 90       	pop	r13
 5ce:	cf 90       	pop	r12
 5d0:	08 95       	ret

000005d2 <__vector_16>:
 5d2:	1f 92       	push	r1
 5d4:	0f 92       	push	r0
 5d6:	0f b6       	in	r0, 0x3f	; 63
 5d8:	0f 92       	push	r0
 5da:	11 24       	eor	r1, r1
 5dc:	2f 93       	push	r18
 5de:	3f 93       	push	r19
 5e0:	8f 93       	push	r24
 5e2:	9f 93       	push	r25
 5e4:	af 93       	push	r26
 5e6:	bf 93       	push	r27
 5e8:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <timer0_millis>
 5ec:	90 91 b7 01 	lds	r25, 0x01B7	; 0x8001b7 <timer0_millis+0x1>
 5f0:	a0 91 b8 01 	lds	r26, 0x01B8	; 0x8001b8 <timer0_millis+0x2>
 5f4:	b0 91 b9 01 	lds	r27, 0x01B9	; 0x8001b9 <timer0_millis+0x3>
 5f8:	30 91 b5 01 	lds	r19, 0x01B5	; 0x8001b5 <timer0_fract>
 5fc:	23 e0       	ldi	r18, 0x03	; 3
 5fe:	23 0f       	add	r18, r19
 600:	2d 37       	cpi	r18, 0x7D	; 125
 602:	20 f4       	brcc	.+8      	; 0x60c <__vector_16+0x3a>
 604:	01 96       	adiw	r24, 0x01	; 1
 606:	a1 1d       	adc	r26, r1
 608:	b1 1d       	adc	r27, r1
 60a:	05 c0       	rjmp	.+10     	; 0x616 <__vector_16+0x44>
 60c:	26 e8       	ldi	r18, 0x86	; 134
 60e:	23 0f       	add	r18, r19
 610:	02 96       	adiw	r24, 0x02	; 2
 612:	a1 1d       	adc	r26, r1
 614:	b1 1d       	adc	r27, r1
 616:	20 93 b5 01 	sts	0x01B5, r18	; 0x8001b5 <timer0_fract>
 61a:	80 93 b6 01 	sts	0x01B6, r24	; 0x8001b6 <timer0_millis>
 61e:	90 93 b7 01 	sts	0x01B7, r25	; 0x8001b7 <timer0_millis+0x1>
 622:	a0 93 b8 01 	sts	0x01B8, r26	; 0x8001b8 <timer0_millis+0x2>
 626:	b0 93 b9 01 	sts	0x01B9, r27	; 0x8001b9 <timer0_millis+0x3>
 62a:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <timer0_overflow_count>
 62e:	90 91 bb 01 	lds	r25, 0x01BB	; 0x8001bb <timer0_overflow_count+0x1>
 632:	a0 91 bc 01 	lds	r26, 0x01BC	; 0x8001bc <timer0_overflow_count+0x2>
 636:	b0 91 bd 01 	lds	r27, 0x01BD	; 0x8001bd <timer0_overflow_count+0x3>
 63a:	01 96       	adiw	r24, 0x01	; 1
 63c:	a1 1d       	adc	r26, r1
 63e:	b1 1d       	adc	r27, r1
 640:	80 93 ba 01 	sts	0x01BA, r24	; 0x8001ba <timer0_overflow_count>
 644:	90 93 bb 01 	sts	0x01BB, r25	; 0x8001bb <timer0_overflow_count+0x1>
 648:	a0 93 bc 01 	sts	0x01BC, r26	; 0x8001bc <timer0_overflow_count+0x2>
 64c:	b0 93 bd 01 	sts	0x01BD, r27	; 0x8001bd <timer0_overflow_count+0x3>
 650:	bf 91       	pop	r27
 652:	af 91       	pop	r26
 654:	9f 91       	pop	r25
 656:	8f 91       	pop	r24
 658:	3f 91       	pop	r19
 65a:	2f 91       	pop	r18
 65c:	0f 90       	pop	r0
 65e:	0f be       	out	0x3f, r0	; 63
 660:	0f 90       	pop	r0
 662:	1f 90       	pop	r1
 664:	18 95       	reti

00000666 <init>:
 666:	78 94       	sei
 668:	84 b5       	in	r24, 0x24	; 36
 66a:	82 60       	ori	r24, 0x02	; 2
 66c:	84 bd       	out	0x24, r24	; 36
 66e:	84 b5       	in	r24, 0x24	; 36
 670:	81 60       	ori	r24, 0x01	; 1
 672:	84 bd       	out	0x24, r24	; 36
 674:	85 b5       	in	r24, 0x25	; 37
 676:	82 60       	ori	r24, 0x02	; 2
 678:	85 bd       	out	0x25, r24	; 37
 67a:	85 b5       	in	r24, 0x25	; 37
 67c:	81 60       	ori	r24, 0x01	; 1
 67e:	85 bd       	out	0x25, r24	; 37
 680:	ee e6       	ldi	r30, 0x6E	; 110
 682:	f0 e0       	ldi	r31, 0x00	; 0
 684:	80 81       	ld	r24, Z
 686:	81 60       	ori	r24, 0x01	; 1
 688:	80 83       	st	Z, r24
 68a:	e1 e8       	ldi	r30, 0x81	; 129
 68c:	f0 e0       	ldi	r31, 0x00	; 0
 68e:	10 82       	st	Z, r1
 690:	80 81       	ld	r24, Z
 692:	82 60       	ori	r24, 0x02	; 2
 694:	80 83       	st	Z, r24
 696:	80 81       	ld	r24, Z
 698:	81 60       	ori	r24, 0x01	; 1
 69a:	80 83       	st	Z, r24
 69c:	e0 e8       	ldi	r30, 0x80	; 128
 69e:	f0 e0       	ldi	r31, 0x00	; 0
 6a0:	80 81       	ld	r24, Z
 6a2:	81 60       	ori	r24, 0x01	; 1
 6a4:	80 83       	st	Z, r24
 6a6:	e1 eb       	ldi	r30, 0xB1	; 177
 6a8:	f0 e0       	ldi	r31, 0x00	; 0
 6aa:	80 81       	ld	r24, Z
 6ac:	84 60       	ori	r24, 0x04	; 4
 6ae:	80 83       	st	Z, r24
 6b0:	e0 eb       	ldi	r30, 0xB0	; 176
 6b2:	f0 e0       	ldi	r31, 0x00	; 0
 6b4:	80 81       	ld	r24, Z
 6b6:	81 60       	ori	r24, 0x01	; 1
 6b8:	80 83       	st	Z, r24
 6ba:	ea e7       	ldi	r30, 0x7A	; 122
 6bc:	f0 e0       	ldi	r31, 0x00	; 0
 6be:	80 81       	ld	r24, Z
 6c0:	84 60       	ori	r24, 0x04	; 4
 6c2:	80 83       	st	Z, r24
 6c4:	80 81       	ld	r24, Z
 6c6:	82 60       	ori	r24, 0x02	; 2
 6c8:	80 83       	st	Z, r24
 6ca:	80 81       	ld	r24, Z
 6cc:	81 60       	ori	r24, 0x01	; 1
 6ce:	80 83       	st	Z, r24
 6d0:	80 81       	ld	r24, Z
 6d2:	80 68       	ori	r24, 0x80	; 128
 6d4:	80 83       	st	Z, r24
 6d6:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 6da:	08 95       	ret

000006dc <__udivmodsi4>:
 6dc:	a1 e2       	ldi	r26, 0x21	; 33
 6de:	1a 2e       	mov	r1, r26
 6e0:	aa 1b       	sub	r26, r26
 6e2:	bb 1b       	sub	r27, r27
 6e4:	fd 01       	movw	r30, r26
 6e6:	0d c0       	rjmp	.+26     	; 0x702 <__udivmodsi4_ep>

000006e8 <__udivmodsi4_loop>:
 6e8:	aa 1f       	adc	r26, r26
 6ea:	bb 1f       	adc	r27, r27
 6ec:	ee 1f       	adc	r30, r30
 6ee:	ff 1f       	adc	r31, r31
 6f0:	a2 17       	cp	r26, r18
 6f2:	b3 07       	cpc	r27, r19
 6f4:	e4 07       	cpc	r30, r20
 6f6:	f5 07       	cpc	r31, r21
 6f8:	20 f0       	brcs	.+8      	; 0x702 <__udivmodsi4_ep>
 6fa:	a2 1b       	sub	r26, r18
 6fc:	b3 0b       	sbc	r27, r19
 6fe:	e4 0b       	sbc	r30, r20
 700:	f5 0b       	sbc	r31, r21

00000702 <__udivmodsi4_ep>:
 702:	66 1f       	adc	r22, r22
 704:	77 1f       	adc	r23, r23
 706:	88 1f       	adc	r24, r24
 708:	99 1f       	adc	r25, r25
 70a:	1a 94       	dec	r1
 70c:	69 f7       	brne	.-38     	; 0x6e8 <__udivmodsi4_loop>
 70e:	60 95       	com	r22
 710:	70 95       	com	r23
 712:	80 95       	com	r24
 714:	90 95       	com	r25
 716:	9b 01       	movw	r18, r22
 718:	ac 01       	movw	r20, r24
 71a:	bd 01       	movw	r22, r26
 71c:	cf 01       	movw	r24, r30
 71e:	08 95       	ret

00000720 <__tablejump2__>:
 720:	ee 0f       	add	r30, r30
 722:	ff 1f       	adc	r31, r31
 724:	05 90       	lpm	r0, Z+
 726:	f4 91       	lpm	r31, Z
 728:	e0 2d       	mov	r30, r0
 72a:	09 94       	ijmp

0000072c <_exit>:
 72c:	f8 94       	cli

0000072e <__stop_program>:
 72e:	ff cf       	rjmp	.-2      	; 0x72e <__stop_program>
